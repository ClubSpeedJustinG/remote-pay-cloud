{"version":3,"sources":["com/clover/remote/client/CloverConnector.ts"],"names":[],"mappings":"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","file":"../../../../../com/clover/remote/client/CloverConnector.js","sourcesContent":["import sdk = require('remote-pay-cloud-api');\nimport {CloverConnectorBroadcaster} from './CloverConnectorBroadcaster';\nimport {CloverDevice} from './device/CloverDevice';\nimport {CloverDeviceConfiguration} from './device/CloverDeviceConfiguration';\nimport {CloverDeviceFactory} from './device/CloverDeviceFactory';\nimport {CloverDeviceObserver} from './CloverDeviceObserver';\nimport {Logger} from './util/Logger';\nimport {ResultCode} from './messages/ResultCode';\n\n/**\n * Clover Connector\n * \n * The clover connector implements the ICloverConnector interface. This is where\n * we define how the connector interacts with remote pay adapters.\n */\nexport class CloverConnector implements sdk.remotepay.ICloverConnector {\n\tprivate static KIOSK_CARD_ENTRY_METHODS: number\t\t\t= 1 << 15;\n\n\tpublic static CARD_ENTRY_METHOD_MAG_STRIPE: number\t\t= 0b0001 | 0b000100000000 | CloverConnector.KIOSK_CARD_ENTRY_METHODS; // 33026\n\tpublic static CARD_ENTRY_METHOD_ICC_CONTACT: number\t\t= 0b0010 | 0b001000000000 | CloverConnector.KIOSK_CARD_ENTRY_METHODS; // 33282\n\tpublic static CARD_ENTRY_METHOD_NFC_CONTACTLESS: number\t= 0b0100 | 0b010000000000 | CloverConnector.KIOSK_CARD_ENTRY_METHODS; // 33796\n\tpublic static CARD_ENTRY_METHOD_MANUAL: number\t\t\t= 0b1000 | 0b100000000000 | CloverConnector.KIOSK_CARD_ENTRY_METHODS; // 34824\n\n\tpublic static CANCEL_INPUT_OPTION: sdk.remotemessage.InputOption;\n\n\t// manual is not enabled by default\n\tprivate cardEntryMethods: number = CloverConnector.CARD_ENTRY_METHOD_MAG_STRIPE | CloverConnector.CARD_ENTRY_METHOD_ICC_CONTACT | CloverConnector.CARD_ENTRY_METHOD_NFC_CONTACTLESS; // | CARD_ENTRY_METHOD_MANUAL;\n\n\t// Create a logger\n\tprivate logger: Logger = Logger.create();\n\n\t// The device we are connected to\n\tpublic device: CloverDevice;\n\n\t// Hold the current merchant info\n\tpublic merchantInfo: sdk.remotepay.MerchantInfo;\n\n\t// The device observer for this connector\n\tprivate deviceObserver: sdk.remotepay.ICloverConnectorListener;\n\n\t// List of listeners to broadcast notifications to\n\tpublic broadcaster: CloverConnectorBroadcaster = new CloverConnectorBroadcaster();\n\n\t// Device Configuration for this connector\n\tprivate configuration: CloverDeviceConfiguration;\n\n\t// Flag indicating whether the device is ready or not\n\tpublic isReady: boolean = false;\n\n\t// Hold the last request\n\tpublic lastRequest: any;\n\n\tconstructor(config: CloverDeviceConfiguration) {\n\t\t// Set the cancel input option\n\t\tCloverConnector.CANCEL_INPUT_OPTION = new sdk.remotemessage.InputOption(sdk.remotemessage.KeyPress.ESC, \"Cancel\");\n\n\t\t// Try to load the configuration.\n\t\tif (config) {\n\t\t\ttry {\n\t\t\t\t// Make sure we do not change the passed object, make a copy.\n\t\t\t\tthis.configuration = JSON.parse(JSON.stringify(config));\n\t\t\t}\n\t\t\tcatch(e) {\n\t\t\t\tthis.logger.error('Could not load configuration', e);\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Initialize the connector with a new config\n\t * \n\t * @param {CloverDeviceConfiguration} config - the configuration for the connector\n\t */\n\tpublic initialize(config: CloverDeviceConfiguration): void {\n\t\ttry {\n\t\t\t// Make sure we do not change the passed object, make a copy.\n\t\t\tthis.configuration = JSON.parse(JSON.stringify(config));\n\t\t}\n\t\tcatch(e) {\n\t\t\tthis.logger.error('Could not load configuration', e);\n\t\t\tthrow e;\n\t\t}\n\t\tthis.deviceObserver = new CloverConnector.InnerDeviceObserver(this);\n\n\t\t// Get the device and subscribe to it.\n\t\tthis.device = CloverDeviceFactory.get(config);\n\t\tif (this.device != null) {\n\t\t\tthis.device.subscribe(this.deviceObserver);\n\t\t}\n\t}\n\n\tpublic initializeConnection(): void {\n\t\tif (this.device == null) {\n\t\t\tthis.initialize(this.configuration);\n\t\t}\n\t}\n\n\t/**\n\t * Add new listener to receive broadcast notifications\n\t * \n\t * @param {ICloverConnectorListener} connectorListener - the listener to add\n\t */\n\tpublic addCloverConnectorListener(connectorListener: sdk.remotepay.ICloverConnectorListener): void {\n\t\tthis.broadcaster.push(connectorListener);\n\t}\n\n\t/**\n\t * Remove a listener\n\t * \n\t * @param {ICloverConnectorListener} connectorListener - the listener to remove\n\t */\n\tpublic removeCloverConnectorListener(connectorListener: sdk.remotepay.ICloverConnectorListener): void {\n\t\tvar indexOfListener = this.broadcaster.indexOf(connectorListener);\n\t\tif (indexOfListener != -1) {\n\t\t\tthis.broadcaster.splice(indexOfListener, 1);\n\t\t}\n\t}\n\n\tpublic sale(request: sdk.remotepay.SaleRequest): void {\n\t\tthis.lastRequest = request;\n\t\tif (this.device == null || !this.isReady) {\n\t\t\tthis.deviceObserver.onFinishCancel(ResultCode.ERROR, \"Device Connection Error\", \"In sale: SaleRequest - The Clover device is not connected.\");\n\t\t}\n\t\telse if (request == null) {\n\t\t\tthis.deviceObserver.onFinishCancel(ResultCode.FAIL, \"Invalid Argument.\", \"In sale: SaleRequest - The request that was passed in for processing is null.\");\n\t\t}\n\t\telse if (request.getAmount() <= 0) {\n\t\t\tthis.deviceObserver.onFinishCancel(ResultCode.FAIL, \"Request Validation Error\", \"In sale: SaleRequest - The request amount cannot be zero. Original Request = \" + request);\n\t\t}\n\t\telse if (request.getTipAmount() !== null && request.getTipAmount() < 0) {\n\t\t\tthis.deviceObserver.onFinishCancel(ResultCode.FAIL, \"Request Validation Error\", \"In sale: SaleRequest - The tip amount cannot be less than zero. Original Request = \" + request);\n\t\t}\n\t\telse if (request.getExternalId() == null || request.getExternalId().trim().length() == 0 || request.getExternalId().trim().length() > 32){\n\t\t\tthis.deviceObserver.onFinishCancel(ResultCode.FAIL, \"Invalid Argument.\", \"In sale: SaleRequest - The externalId is required and the max length is 32 characters. Original Request = \" + request);\n\t\t}\n\t\telse if (request.getVaultedCard() !== null && !this.merchantInfo.supportsVaultCards) {\n\t\t\tthis.deviceObserver.onFinishCancel(ResultCode.UNSUPPORTED, \"Merchant Configuration Validation Error\", \"In sale: SaleRequest - Vault Card support is not enabled for the payment gateway. Original Request = \" + request);\n\t\t} else {\n\t\t\tif (request.getTipAmount() == null) {\n\t\t\t\trequest.setTipAmount(0);\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tthis.saleAuth(request, false);\n\t\t\t}\n\t\t\tcatch(e) {\n\t\t\t\tthis.deviceObserver.onFinishCancel(ResultCode.ERROR, e, null);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A common PayIntent builder method for Sale, Auth and PreAuth\n\t *\n\t * @param request\n\t */\n\tprivate saleAuth(request: sdk.remotepay.TransactionRequest, suppressTipScreen: boolean): void {\n\t\tif (this.device !== null && this.isReady) {\n\t\t\tthis.lastRequest = request;\n\n\t\t\tlet builder: sdk.remotemessage.PayIntent.Builder = new sdk.remotemessage.PayIntent.Builder();\n\t\t\tbuilder.transactionType(request.getType()); // difference between sale, auth and auth(preAuth)\n\t\t\tbuilder.amount(request.getAmount());\n\t\t\tbuilder.cardEntryMethods(request.getCardEntryMethods() !== null ? request.getCardEntryMethods() : this.cardEntryMethods);\n\t\t\tif (request.getDisablePrinting() !== null) {\n\t\t\t\tbuilder.remotePrint(request.getDisablePrinting());\n\t\t\t}\n\t\t\tif (request.getCardNotPresent() !== null) {\n\t\t\t\tbuilder.cardNotPresent(request.getCardNotPresent());\n\t\t\t}\n\t\t\tif (request.getDisableRestartTransactionOnFail() !== null) {\n\t\t\t\tbuilder.disableRestartTransactionWhenFailed(request.getDisableRestartTransactionOnFail());\n\t\t\t}\n\t\t\tbuilder.vaultedCard(request.getVaultedCard());\n\t\t\tbuilder.externalPaymentId(request.getExternalId().trim());\n\t\t\tbuilder.requiresRemoteConfirmation(true);\n\n\t\t\tif (request instanceof sdk.remotepay.PreAuthRequest) {\n\t\t\t\t// nothing extra as of now\n\t\t\t}\n\t\t\telse if (request instanceof sdk.remotepay.AuthRequest) {\n\t\t\t\tlet req: sdk.remotepay.AuthRequest = request;\n\t\t\t\tif (req.getTippableAmount() !== null) {\n\t\t\t\t\tbuilder.tippableAmount(req.getTippableAmount());\n\t\t\t\t}\n\t\t\t\tif (req.getAllowOfflinePayment() !== null) {\n\t\t\t\t\tbuilder.allowOfflinePayment(req.getAllowOfflinePayment());\n\t\t\t\t}\n\t\t\t\tif (req.getApproveOfflinePaymentWithoutPrompt() !== null) {\n\t\t\t\t\tbuilder.approveOfflinePaymentWithoutPrompt(req.getApproveOfflinePaymentWithoutPrompt());\n\t\t\t\t}\n\t\t\t\tif (req.getDisableCashback() !== null) {\n\t\t\t\t\tbuilder.disableCashback(req.getDisableCashback());\n\t\t\t\t}\n\t\t\t\tif (req.getTaxAmount() !== null) {\n\t\t\t\t\tbuilder.taxAmount(req.getTaxAmount());\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (request instanceof sdk.remotepay.SaleRequest) {\n\t\t\t\tlet req: sdk.remotepay.SaleRequest = request;\n\t\t\t\t// shared with AuthRequest\n\t\t\t\tif (req.getAllowOfflinePayment() !== null) {\n\t\t\t\t\tbuilder.allowOfflinePayment(req.getAllowOfflinePayment());\n\t\t\t\t}\n\t\t\t\tif (req.getApproveOfflinePaymentWithoutPrompt() !== null) {\n\t\t\t\t\tbuilder.approveOfflinePaymentWithoutPrompt(req.getApproveOfflinePaymentWithoutPrompt());\n\t\t\t\t}\n\t\t\t\tif (req.getDisableCashback() !== null) {\n\t\t\t\t\tbuilder.disableCashback(req.getDisableCashback());\n\t\t\t\t}\n\t\t\t\tif (req.getTaxAmount() !== null) {\n\t\t\t\t\tbuilder.taxAmount(req.getTaxAmount());\n\t\t\t\t}\n\t\t\t\t// SaleRequest\n\t\t\t\tif (req.getTippableAmount() !== null) {\n\t\t\t\t\tbuilder.tippableAmount(req.getTippableAmount());\n\t\t\t\t}\n\t\t\t\tif (req.getTipAmount() !== null) {\n\t\t\t\t\tbuilder.tipAmount(req.getTipAmount());\n\t\t\t\t}\n\n\t\t\t\t// sale could pass in the tipAmount and not override on the screen,\n\t\t\t\t// but that is the exceptional case\n\t\t\t\tif (req.getDisableTipOnScreen() !== null) {\n\t\t\t\t\tsuppressTipScreen = req.getDisableTipOnScreen();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet payIntent: sdk.remotemessage.PayIntent = builder.build();\n\t\t\tthis.device.doTxStart(payIntent, null, suppressTipScreen); //\n\t\t}\n\t}\n\n\tpublic acceptSignature(request: sdk.remotepay.VerifySignatureRequest): void {\n\t\tif (this.device == null || !this.isReady) {\n\t\t\tthis.broadcaster.notifyOnDeviceError(new sdk.remotepay.CloverDeviceErrorEvent(sdk.remotepay.CloverDeviceErrorEvent.CloverDeviceErrorType.VALIDATION_ERROR, 0, \"In acceptSignature: Device is not connected.\"));\n\t\t} else if(request == null) {\n\t\t\tthis.broadcaster.notifyOnDeviceError(new sdk.remotepay.CloverDeviceErrorEvent(sdk.remotepay.CloverDeviceErrorEvent.CloverDeviceErrorType.VALIDATION_ERROR, 0, \"In acceptSignature: VerifySignatureRequest cannot be null.\"));\n\t\t} else if(request.getPayment() == null || request.getPayment().getId() == null) {\n\t\t\tthis.broadcaster.notifyOnDeviceError(new sdk.remotepay.CloverDeviceErrorEvent(sdk.remotepay.CloverDeviceErrorEvent.CloverDeviceErrorType.VALIDATION_ERROR, 0, \"In acceptSignature: VerifySignatureRequest. Payment must have anID.\"));\n\t\t} else {\n\t\t\tthis.device.doSignatureVerified(request.getPayment(), true);\n\t\t}\n\t}\n\n\tpublic rejectSignature(request: sdk.remotepay.VerifySignatureRequest): void {\n\t\tif (this.device == null || !this.isReady) {\n\t\t\tthis.broadcaster.notifyOnDeviceError(new sdk.remotepay.CloverDeviceErrorEvent(sdk.remotepay.CloverDeviceErrorEvent.CloverDeviceErrorType.VALIDATION_ERROR, 0, \"In rejectSignature: Device is not connected.\"));\n\t\t} else if(request == null) {\n\t\t\tthis.broadcaster.notifyOnDeviceError(new sdk.remotepay.CloverDeviceErrorEvent(sdk.remotepay.CloverDeviceErrorEvent.CloverDeviceErrorType.VALIDATION_ERROR, 0, \"In rejectSignature: VerifySignatureRequest cannot be null.\"));\n\t\t} else if(request.getPayment() == null || request.getPayment().getId() == null) {\n\t\t\tthis.broadcaster.notifyOnDeviceError(new sdk.remotepay.CloverDeviceErrorEvent(sdk.remotepay.CloverDeviceErrorEvent.CloverDeviceErrorType.VALIDATION_ERROR, 0, \"In rejectSignature: VerifySignatureRequest.Payment must have an ID.\"));\n\t\t} else {\n\t\t\tthis.device.doSignatureVerified(request.getPayment(), false);\n\t\t}\n\t}\n\n\tpublic acceptPayment(payment: sdk.payments.Payment): void {\n\t\tif (this.device == null || !this.isReady) {\n\t\t\tthis.broadcaster.notifyOnDeviceError(new sdk.remotepay.CloverDeviceErrorEvent(sdk.remotepay.CloverDeviceErrorEvent.CloverDeviceErrorType.VALIDATION_ERROR, 0, \"In acceptPayment: Device is not connected.\"));\n\t\t} else if(payment == null) {\n\t\t\tthis.broadcaster.notifyOnDeviceError(new sdk.remotepay.CloverDeviceErrorEvent(sdk.remotepay.CloverDeviceErrorEvent.CloverDeviceErrorType.VALIDATION_ERROR, 0, \"In acceptPayment: Payment cannot be null.\"));\n\t\t} else if(payment.getId() == null) {\n\t\t\tthis.broadcaster.notifyOnDeviceError(new sdk.remotepay.CloverDeviceErrorEvent(sdk.remotepay.CloverDeviceErrorEvent.CloverDeviceErrorType.VALIDATION_ERROR, 0, \"In acceptPayment: Payment must have an ID.\"));\n\t\t} else {\n\t\t\tthis.device.doAcceptPayment(payment);\n\t\t}\n\t}\n\n\tpublic rejectPayment(payment: sdk.payments.Payment, challenge: sdk.base.Challenge): void {\n\t\tif (this.device == null || !this.isReady) {\n\t\t\tthis.broadcaster.notifyOnDeviceError(new sdk.remotepay.CloverDeviceErrorEvent(sdk.remotepay.CloverDeviceErrorEvent.CloverDeviceErrorType.VALIDATION_ERROR, 0, \"In rejectPayment: Device is not connected.\"));\n\t\t} else if(payment == null) {\n\t\t\tthis.broadcaster.notifyOnDeviceError(new sdk.remotepay.CloverDeviceErrorEvent(sdk.remotepay.CloverDeviceErrorEvent.CloverDeviceErrorType.VALIDATION_ERROR, 0, \"In rejectPayment: Payment cannot be null.\"));\n\t\t} else if(payment.getId() == null) {\n\t\t\tthis.broadcaster.notifyOnDeviceError(new sdk.remotepay.CloverDeviceErrorEvent(sdk.remotepay.CloverDeviceErrorEvent.CloverDeviceErrorType.VALIDATION_ERROR, 0, \"In rejectPayment: Payment must have an ID.\"));\n\t\t} else if(challenge == null) {\n\t\t\tthis.broadcaster.notifyOnDeviceError(new sdk.remotepay.CloverDeviceErrorEvent(sdk.remotepay.CloverDeviceErrorEvent.CloverDeviceErrorType.VALIDATION_ERROR, 0, \"In rejectPayment: Challenge cannot be null.\"));\n\t\t} else {\n\t\t\tthis.device.doRejectPayment(payment, challenge);\n\t\t}\n\t}\n\n\tpublic auth(request: sdk.remotepay.AuthRequest): void {\n\t\tthis.lastRequest = request;\n\t\tif (this.device == null || !this.isReady) {\n\t\t\tthis.deviceObserver.onFinishCancel(ResultCode.ERROR, \"Device connection Error\", \"In auth: Auth Request - The Clover device is not connected.\");\n\t\t} else if (!this.merchantInfo.supportsAuths) {\n\t\t\tthis.deviceObserver.onFinishCancel(ResultCode.UNSUPPORTED, \"Merchant Configuration Validation Error\", \"In auth: AuthRequest - Auths are not enabled for the payment gateway. Original Request = \" + request);\n\t\t} else if(request == null) {\n\t\t\tthis.deviceObserver.onFinishCancel(ResultCode.FAIL, \"Invalid Argument.\", \"In auth: AuthRequest - The request that was passed in for processing is null.\");\n\t\t} else if(request.getAmount() <= 0) {\n\t\t\tthis.deviceObserver.onFinishCancel(\n\t\t\tResultCode.FAIL, \"Request Validation Error\", \"In auth: AuthRequest - The request amount cannot be zero. Original Request = \" + request);\n\t\t} else if (request.getExternalId() == null || request.getExternalId().trim().length() == 0 || request.getExternalId().trim().length() > 32){\n\t\t\tthis.deviceObserver.onFinishCancel(ResultCode.FAIL, \"Invalid Argument.\", \"In auth: AuthRequest - The externalId is invalid. It is required and the max length is 32. Original Request = \" + request);\n\t\t} else if (request.getVaultedCard() !== null && !this.merchantInfo.supportsVaultCards) {\n\t\t\tthis.deviceObserver.onFinishCancel(ResultCode.UNSUPPORTED, \"Merchant Configuration Validation Error\", \"In auth: AuthRequest - Vault Card support is not enabled for the payment gateway. Original Request = \" + request);\n\t\t} else {\n\t\t\ttry {\n\t\t\t\tthis.saleAuth(request, true);\n\t\t\t}\n\t\t\tcatch(e) {\n\t\t\t\tthis.deviceObserver.onFinishCancel(ResultCode.ERROR, e, null);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic preAuth(request: sdk.remotepay.PreAuthRequest): void {\n\t\tthis.lastRequest = request;\n\t\tif (this.device == null || !this.isReady) {\n\t\t\tthis.deviceObserver.onFinishCancel(ResultCode.ERROR, \"Device connection Error\", \"In preAuth: PreAuthRequest - The Clover device is not connected.\");\n\t\t}\n\t\telse if (!this.merchantInfo.supportsPreAuths) {\n\t\t\tthis.deviceObserver.onFinishCancel(ResultCode.UNSUPPORTED, \"Merchant Configuration Validation Error\", \"In preAuth: PreAuthRequest - PreAuths are not enabled for the payment gateway. Original Request = \" + request);\n\t\t}\n\t\telse if (request == null) {\n\t\t\tthis.deviceObserver.onFinishCancel(ResultCode.FAIL, \"Invalid Argument.\", \"In preAuth: PreAuthRequest - The request that was passed in for processing is null.\");\n\t\t}\n\t\telse if (request.getAmount() <= 0) {\n\t\t\tthis.deviceObserver.onFinishCancel(ResultCode.FAIL, \"Request Validation Error\", \"In preAuth: PreAuthRequest - The request amount cannot be zero. Original Request = \" + request);\n\t\t}\n\t\telse if (request.getExternalId() == null || request.getExternalId().trim().length() == 0 || request.getExternalId().trim().length() > 32){\n\t\t\tthis.deviceObserver.onFinishCancel(ResultCode.FAIL, \"Invalid Argument.\", \"In preAuth: PreAuthRequest - The externalId is invalid. It is required and the max length is 32. Original Request = \" + request);\n\t\t}\n\t\telse if (request.getVaultedCard() !== null && !this.merchantInfo.supportsVaultCards) {\n\t\t\tthis.deviceObserver.onFinishCancel(ResultCode.UNSUPPORTED, \"Merchant Configuration Validation Error\", \"In preAuth: PreAuthRequest - Vault Card support is not enabled for the payment gateway. Original Request = \" + request);\n\t\t}\n\t\telse {\n\t\t\ttry {\n\t\t\t\tthis.saleAuth(request, true);\n\t\t\t}\n\t\t\tcatch(e) {\n\t\t\t\tthis.lastRequest = null;\n\t\t\t\tthis.deviceObserver.onFinishCancel(ResultCode.ERROR, e, null);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic capturePreAuth(request: sdk.remotepay.CapturePreAuthRequest): void {\n\t\tif (this.device == null || !this.isReady) {\n\t\t\tthis.deviceObserver.onCapturePreAuth(ResultCode.ERROR, \"Device connection Error\", \"In capturePreAuth: CapturePreAuth - The Clover device is not connected.\", null, null);\n\t\t}\n\t\telse if (!this.merchantInfo.supportsPreAuths) {\n\t\t\tthis.deviceObserver.onCapturePreAuth(ResultCode.UNSUPPORTED, \"Merchant Configuration Validation Error\", \"In capturePreAuth: PreAuth Captures are not enabled for the payment gateway. Original Request = \" + request, null, null);\n\t\t}\n\t\telse if (request == null) {\n\t\t\tthis.deviceObserver.onCapturePreAuth(ResultCode.FAIL, \"Invalid Argument.\", \"In capturePreAuth: CapturePreAuth - The request that was passed in for processing is null.\", null, null);\n\t\t}\n\t\telse if (request.getAmount() < 0 || request.getTipAmount() < 0) {\n\t\t\tthis.deviceObserver.onCapturePreAuth(ResultCode.FAIL, \"Request Validation Error\", \"In capturePreAuth: CapturePreAuth - The request amount must be greater than zero and the tip must be greater than or equal to zero. Original Request = \" + request, null, null);\n\t\t}\n\t\telse {\n\t\t\ttry {\n\t\t\t\tthis.device.doCaptureAuth(request.paymentID, request.amount, request.tipAmount);\n\t\t\t}\n\t\t\tcatch(e) {\n\t\t\t\tlet response: sdk.remotepay.CapturePreAuthResponse = new sdk.remotepay.CapturePreAuthResponse(false, ResultCode.UNSUPPORTED);\n\t\t\t\tresponse.setReason(\"Pre Auths unsupported\");\n\t\t\t\tresponse.setMessage(\"The currently configured merchant gateway does not support Capture Auth requests.\");\n\t\t\t\tthis.broadcaster.notifyOnCapturePreAuth(response);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic tipAdjustAuth(request: sdk.remotepay.TipAdjustAuthRequest): void {\n\t\tif (this.device == null || !this.isReady) {\n\t\t\tthis.deviceObserver.onAuthTipAdjusted(ResultCode.ERROR, \"Device connection Error\", \"In tipAdjustAuth: TipAdjustAuthRequest - The Clover device is not connected.\");\n\t\t}\n\t\telse if (!this.merchantInfo.supportsTipAdjust) {\n\t\t\tthis.deviceObserver.onAuthTipAdjusted(ResultCode.UNSUPPORTED, \"Merchant Configuration Validation Error\", \"In tipAdjustAuth: TipAdjustAuthRequest - Tip Adjustments are not enabled for the payment gateway. Original Request = \" + request);\n\t\t}\n\t\telse if (request == null) {\n\t\t\tthis.deviceObserver.onAuthTipAdjusted(ResultCode.FAIL, \"Invalid Argument.\", \"In tipAdjustAuth: TipAdjustAuthRequest - The request that was passed in for processing is null.\");\n\t\t}\n\t\telse if (request.getPaymentId() == null) {\n\t\t\tthis.deviceObserver.onAuthTipAdjusted(ResultCode.FAIL, \"Invalid Argument.\", \"In tipAdjustAuth: TipAdjustAuthRequest - The paymentId is required.\");\n\t\t}\n\t\telse if (request.getTipAmount() < 0) {\n\t\t\tthis.deviceObserver.onAuthTipAdjusted(ResultCode.FAIL, \"Request Validation Error\", \"In tipAdjustAuth: TipAdjustAuthRequest - The request amount cannot be less than zero. Original Request = \" + request);\n\t\t}\n\t\telse {\n\t\t\tthis.device.doTipAdjustAuth(request.getOrderId(), request.getPaymentId(), request.getTipAmount());\n\t\t}\n\t}\n\n\tpublic vaultCard(cardEntryMethods: number): void {\n\t\tif (this.device == null || !this.isReady) {\n\t\t\tthis.deviceObserver.onVaultCardResponse(false, ResultCode.ERROR, \"Device connection Error\", \"In vaultCard: The Clover device is not connected.\", null);\n\t\t}\n\t\telse if (!this.merchantInfo.supportsVaultCards) {\n\t\t\tthis.deviceObserver.onVaultCardResponse(false, ResultCode.UNSUPPORTED, \"Merchant Configuration Validation Error\", \"In vaultCard: VaultCard/Payment Tokens are not enabled for the payment gateway.\", null);\n\t\t}\n\t\telse {\n\t\t\tthis.device.doVaultCard(cardEntryMethods !== null ? cardEntryMethods : this.getCardEntryMethods());\n\t\t}\n\t}\n\n\tpublic voidPayment(request: sdk.remotepay.VoidPaymentRequest): void {\n\t\tif (this.device == null || !this.isReady) {\n\t\t\tthis.deviceObserver.onPaymentVoided(ResultCode.ERROR, \"Device connection Error\", \"In voidPayment: VoidPaymentRequest - The Clover device is not connected.\");\n\t\t}\n\t\telse if (request == null) {\n\t\t\tthis.deviceObserver.onPaymentVoided(ResultCode.FAIL, \"Invalid Argument.\", \"In voidPayment: VoidPaymentRequest - The request that was passed in for processing is null.\");\n\t\t}\n\t\telse if (request.getPaymentId() == null) {\n\t\t\tthis.deviceObserver.onPaymentVoided(ResultCode.FAIL, \"Invalid Argument.\", \"In voidPayment: VoidPaymentRequest - The paymentId is required.\");\n\t\t}\n\t\telse {\n\t\t\tlet payment: sdk.payments.Payment = new sdk.payments.Payment();\n\t\t\tpayment.setId(request.getPaymentId());\n\t\t\tpayment.setOrder(new sdk.base.Reference());\n\t\t\tpayment.getOrder().setId(request.getOrderId());\n\t\t\tpayment.setEmployee(new sdk.base.Reference());\n\t\t\tpayment.getEmployee().setId(request.getEmployeeId());\n\t\t\tlet reason: sdk.order.VoidReason = sdk.order.VoidReason[request.getVoidReason()];\n\t\t\tthis.device.doVoidPayment(payment, reason);\n\t\t}\n\t}\n\n\tpublic refundPayment(request: sdk.remotepay.RefundPaymentRequest): void {\n\t\tif (this.device == null || !this.isReady) {\n\t\t\tlet prr: sdk.remotepay.RefundPaymentResponse = new sdk.remotepay.RefundPaymentResponse(false, ResultCode.ERROR);\n\t\t\tprr.setRefund(null);\n\t\t\tprr.setReason(\"Device Connection Error\");\n\t\t\tprr.setMessage(\"In refundPayment: RefundPaymentRequest - The Clover device is not connected.\");\n\t\t\tthis.deviceObserver.lastPRR = prr;\n\t\t\tthis.deviceObserver.onFinishCancel();\n\t\t}\n\t\telse if (request == null) {\n\t\t\tlet prr: sdk.remotepay.RefundPaymentResponse = new sdk.remotepay.RefundPaymentResponse(false, ResultCode.FAIL);\n\t\t\tprr.setRefund(null);\n\t\t\tprr.setReason(\"Request Validation Error\");\n\t\t\tprr.setMessage(\"In refundPayment: RefundPaymentRequest - The request that was passed in for processing is empty.\");\n\t\t\tthis.deviceObserver.lastPRR = prr;\n\t\t\tthis.deviceObserver.onFinishCancel();\n\t\t}\n\t\telse if (request.getPaymentId() == null) {\n\t\t\tlet prr: sdk.remotepay.RefundPaymentResponse = new sdk.remotepay.RefundPaymentResponse(false, ResultCode.FAIL);\n\t\t\tprr.setRefund(null);\n\t\t\tprr.setReason(\"Request Validation Error\");\n\t\t\tprr.setMessage(\"In refundPayment: RefundPaymentRequest PaymentID cannot be empty. \" + request);\n\t\t\tthis.deviceObserver.lastPRR = prr;\n\t\t\tthis.deviceObserver.onFinishCancel();\n\t\t}\n\t\telse if (request.getAmount() <= 0 && !request.isFullRefund()) {\n\t\t\tlet prr: sdk.remotepay.RefundPaymentResponse = new sdk.remotepay.RefundPaymentResponse(false, ResultCode.FAIL);\n\t\t\tprr.setRefund(null);\n\t\t\tprr.setReason(\"Request Validation Error\");\n\t\t\tprr.setMessage(\"In refundPayment: RefundPaymentRequest Amount must be greater than zero when FullRefund is set to false. \" + request);\n\t\t\tthis.deviceObserver.lastPRR = prr;\n\t\t\tthis.deviceObserver.onFinishCancel();\n\t\t}\n\t\telse {\n\t\t\tthis.device.doPaymentRefund(request.getOrderId(), request.getPaymentId(), request.getAmount(), request.isFullRefund());\n\t\t}\n\t}\n\n\tpublic manualRefund(request: sdk.remotepay.ManualRefundRequest): void { // NakedRefund is a Transaction, with just negative amount\n\t\tthis.lastRequest = request;\n\t\tif (this.device == null || !this.isReady) {\n\t\t\tthis.deviceObserver.onFinishCancel(ResultCode.ERROR, \"Device connection Error\", \"In manualRefund: ManualRefundRequest - The Clover device is not connected.\");\n\t\t}\n\t\telse if (!this.merchantInfo.supportsManualRefunds) {\n\t\t\tthis.deviceObserver.onFinishCancel(ResultCode.UNSUPPORTED, \"Merchant Configuration Validation Error\", \"In manualRefund: ManualRefundRequest - Manual Refunds are not enabled for the payment gateway. Original Request = \" + request);\n\t\t}\n\t\telse if (request == null) {\n\t\t\tthis.deviceObserver.onFinishCancel(ResultCode.FAIL, \"Invalid Argument.\", \"In manualRefund: ManualRefundRequest - The request that was passed in for processing is null.\");\n\t\t}\n\t\telse if (request.getAmount() <= 0) {\n\t\t\tthis.deviceObserver.onFinishCancel(ResultCode.FAIL, \"Request Validation Error\", \"In manualRefund: ManualRefundRequest - The request amount cannot be zero. Original Request = \" + request);\n\t\t}\n\t\telse if (request.getExternalId() == null || request.getExternalId().trim().length() == 0 || request.getExternalId().trim().length() > 32) {\n\t\t\tthis.deviceObserver.onFinishCancel(ResultCode.FAIL, \"Invalid Argument.\", \"In manualRefund: ManualRefundRequest - The externalId is invalid. It is required and the max length is 32. Original Request = \" + request);\n\t\t}\n\t\telse if (request.getVaultedCard() !== null && !this.merchantInfo.supportsVaultCards) {\n\t\t\tthis.deviceObserver.onFinishCancel(ResultCode.UNSUPPORTED, \"Merchant Configuration Validation Error\", \"In manualRefund: ManualRefundRequest - Vault Card support is not enabled for the payment gateway. Original Request = \" + request);\n\t\t}\n\t\telse {\n\t\t\tlet builder: sdk.remotepay.PayIntent.Builder = new sdk.remotepay.PayIntent.Builder();\n\t\t\tbuilder.amount(-Math.abs(request.getAmount()))\n\t\t\t\t.cardEntryMethods(request.getCardEntryMethods() !== null ? request.getCardEntryMethods() : this.cardEntryMethods)\n\t\t\t\t.transactionType(sdk.remotepay.PayIntent.TransactionType.PAYMENT.CREDIT)\n\t\t\t\t.vaultedCard(request.getVaultedCard())\n\t\t\t\t.externalPaymentId(request.getExternalId());\n\n\t\t\tif (request.getDisablePrinting() !== null) {\n\t\t\t\tbuilder.remotePrint(request.getDisablePrinting());\n\t\t\t}\n\n\t\t\tif (request.getDisableRestartTransactionOnFail() !== null) {\n\t\t\t\tbuilder.disableRestartTransactionWhenFailed(request.getDisableRestartTransactionOnFail());\n\t\t\t}\n\n\t\t\tlet payIntent: sdk.remotepay.PayIntent = builder.build();\n\t\t\tthis.device.doTxStart(payIntent, null, true);\n\t\t}\n\t}\n\n\tpublic retrievePendingPayments(): void {\n\t\tif (this.device == null || !this.isReady) {\n\t\t\tthis.deviceObserver.onPendingPaymentsResponse(ResultCode.ERROR, \"Device connection Error\", \"In retrievePendingPayments: The Clover device is not connected.\");\n\t\t}\n\t\telse {\n\t\t\tthis.device.doRetrievePendingPayments();\n\t\t}\n\t}\n\n\tpublic readCardData(request: sdk.remotepay.ReadCardDataRequest): void {\n\t\tif (this.device == null || !this.isReady) {\n\t\t\tthis.deviceObserver.onReadCardDataResponse(ResultCode.ERROR, \"Device connection Error\", \"In readCardData: The Clover device is not connected.\");\n\t\t}\n\t\telse if (request == null) {\n\t\t\tthis.deviceObserver.onFinishCancel(ResultCode.FAIL, \"Invalid Argument.\", \"In readCardData: ReadCardDataRequest - The request that was passed in for processing is null.\");\n\t\t}\n\t\telse {\n\t\t\t// create pay intent...\n\t\t\tlet builder: sdk.remotemessage.PayIntent.Builder = new sdk.remotemessage.PayIntent.Builder();\n\t\t\tbuilder.transactionType(sdk.remotepay.PayIntent.TransactionType.DATA);\n\t\t\tbuilder.cardEntryMethods(request.getCardEntryMethods() !== null ? request.getCardEntryMethods() : this.cardEntryMethods);\n\t\t\tbuilder.forceSwipePinEntry(request.isForceSwipePinEntry());\n\n\t\t\tlet pi: sdk.remotepay.PayIntent = builder.build();\n\t\t\tthis.device.doReadCardData(pi);\n\t\t}\n\t}\n\n\tpublic closeout(request: sdk.remotepay.CloseoutRequest): void {\n\t\tif (this.device == null || !this.isReady) {\n\t\t\tthis.broadcaster.notifyOnDeviceError(new sdk.remotepay.CloverDeviceErrorEvent(sdk.remotepay.CloverDeviceErrorEvent.CloverDeviceErrorType.COMMUNICATION_ERROR, 0, \"In closeout: CloseoutRequest - The Clover device is not connected.\"));\n\t\t}\n\t\telse {\n\t\t\tthis.device.doCloseout(request.isAllowOpenTabs(), request.getBatchId());\n\t\t}\n\t}\n\n\tpublic cancel(): void {\n\t\tif (this.device == null || !this.isReady) {\n\t\t\tthis.broadcaster.notifyOnDeviceError(new sdk.remotepay.CloverDeviceErrorEvent(sdk.remotepay.CloverDeviceErrorEvent.CloverDeviceErrorType.COMMUNICATION_ERROR, 0, \"In cancel: The Clover device is not connected.\"));\n\t\t}\n\t\telse {\n\t\t\tthis.invokeInputOption(CloverConnector.CANCEL_INPUT_OPTION);\n\t\t}\n\t}\n\n\tpublic printText(messages: Array<string>): void {\n\t\tif (this.device == null || !this.isReady) {\n\t\t\tthis.broadcaster.notifyOnDeviceError(new sdk.remotepay.CloverDeviceErrorEvent(sdk.remotepay.CloverDeviceErrorEvent.CloverDeviceErrorType.COMMUNICATION_ERROR, 0, \"In printText: The Clover device is not connected.\"));\n\t\t} else if(messages == null) {\n\t\t\tthis.broadcaster.notifyOnDeviceError(new sdk.remotepay.CloverDeviceErrorEvent(sdk.remotepay.CloverDeviceErrorEvent.CloverDeviceErrorType.VALIDATION_ERROR, 0, \"In printText: Invalid argument. Null is not allowed.\"));\n\t\t} else {\n\t\t\tthis.device.doPrintText(messages);\n\t\t}\n\t}\n\n\tpublic printImage(bitmap: number[]): void { //Bitmap img\n\t\tif (this.device == null || !this.isReady) {\n\t\t\tthis.broadcaster.notifyOnDeviceError(new sdk.remotepay.CloverDeviceErrorEvent(sdk.remotepay.CloverDeviceErrorEvent.CloverDeviceErrorType.COMMUNICATION_ERROR, 0, \"In printImage: The Clover device is not connected.\"));\n\t\t}\n\t\telse if (bitmap == null) {\n\t\t\tthis.broadcaster.notifyOnDeviceError(new sdk.remotepay.CloverDeviceErrorEvent(sdk.remotepay.CloverDeviceErrorEvent.CloverDeviceErrorType.VALIDATION_ERROR, 0, \"In printImage: Invalid argument.  Null is not allowed.\"));\n\t\t}\n\t\telse {\n\t\t\tthis.device.doPrintImage(bitmap);\n\t\t}\n\t}\n\n\tpublic printImageFromURL(url: string): void {\n\t\tif (this.device == null || !this.isReady) {\n\t\t\tthis.broadcaster.notifyOnDeviceError(new sdk.remotepay.CloverDeviceErrorEvent(sdk.remotepay.CloverDeviceErrorEvent.CloverDeviceErrorType.COMMUNICATION_ERROR, 0, \"In printImageFromURL: The Clover device is not connected.\"));\n\t\t}\n\t\telse if (url == null) {\n\t\t\tthis.broadcaster.notifyOnDeviceError(new sdk.remotepay.CloverDeviceErrorEvent(sdk.remotepay.CloverDeviceErrorEvent.CloverDeviceErrorType.VALIDATION_ERROR, 0, \"In printImageFromURL: Invalid argument.  Null is not allowed.\"));\n\t\t}\n\t\telse {\n\t\t\tthis.device.doPrintImage(url);\n\t\t}\n\t}\n\n\tpublic showMessage(message: string): void {\n\t\tif (this.device == null || !this.isReady) {\n\t\t\tthis.broadcaster.notifyOnDeviceError(new sdk.remotepay.CloverDeviceErrorEvent(sdk.remotepay.CloverDeviceErrorEvent.CloverDeviceErrorType.COMMUNICATION_ERROR, 0, \"In showMessage: The Clover device is not connected.\"));\n\t\t}\n\t\telse if (message == null) {\n\t\t\tthis.broadcaster.notifyOnDeviceError(new sdk.remotepay.CloverDeviceErrorEvent(sdk.remotepay.CloverDeviceErrorEvent.CloverDeviceErrorType.VALIDATION_ERROR, 0, \"In showMessage: Invalid argument.  Null is not allowed.\"));\n\t\t}\n\t\telse {\n\t\t\tthis.device.doTerminalMessage(message);\n\t\t}\n\t}\n\n\tpublic showWelcomeScreen(): void {\n\t\tif (this.device == null || !this.isReady) {\n\t\t\tthis.broadcaster.notifyOnDeviceError(new sdk.remotepay.CloverDeviceErrorEvent(sdk.remotepay.CloverDeviceErrorEvent.CloverDeviceErrorType.COMMUNICATION_ERROR, 0, \"In showWelcomeScreen: The Clover device is not connected.\"));\n\t\t} else {\n\t\t\tthis.device.doShowWelcomeScreen();\n\t\t}\n\t}\n\n\tpublic showThankYouScreen(): void {\n\t\tif (this.device == null || !this.isReady) {\n\t\t\tthis.broadcaster.notifyOnDeviceError(new sdk.remotepay.CloverDeviceErrorEvent(sdk.remotepay.CloverDeviceErrorEvent.CloverDeviceErrorType.COMMUNICATION_ERROR, 0, \"In showThankYouScreen: The Clover device is not connected.\"));\n\t\t} else {\n\t\t\tthis.device.doShowThankYouScreen();\n\t\t}\n\t}\n\n\tpublic displayPaymentReceiptOptions(orderId: string, paymentId: string): void {\n\t\tif (this.device == null || !this.isReady) {\n\t\t\tthis.broadcaster.notifyOnDeviceError(new sdk.remotepay.CloverDeviceErrorEvent(sdk.remotepay.CloverDeviceErrorEvent.CloverDeviceErrorType.COMMUNICATION_ERROR, 0, \"In displayPaymentReceiptOptions: The Clover device is not connected.\"));\n\t\t}\n\t\telse if (orderId == null) {\n\t\t\tthis.broadcaster.notifyOnDeviceError(new sdk.remotepay.CloverDeviceErrorEvent(sdk.remotepay.CloverDeviceErrorEvent.CloverDeviceErrorType.VALIDATION_ERROR, 0, \"In displayPaymentReceiptOptions: Invalid argument.  The orderId cannot be null.\"));\n\t\t}\n\t\telse if (paymentId == null) {\n\t\t\tthis.broadcaster.notifyOnDeviceError(new sdk.remotepay.CloverDeviceErrorEvent(sdk.remotepay.CloverDeviceErrorEvent.CloverDeviceErrorType.VALIDATION_ERROR, 0, \"In displayPaymentReceiptOptions: Invalid argument.  The paymentId cannot be null.\"));\n\t\t}\n\t\telse {\n\t\t\tthis.device.doShowPaymentReceiptScreen(orderId, paymentId);\n\t\t}\n\t}\n\n\tpublic openCashDrawer(reason: string): void {\n\t\tif (this.device == null || !this.isReady) {\n\t\t\tthis.broadcaster.notifyOnDeviceError(new sdk.remotepay.CloverDeviceErrorEvent(sdk.remotepay.CloverDeviceErrorEvent.CloverDeviceErrorType.COMMUNICATION_ERROR, 0, \"In displayPaymentReceiptOptions: The Clover device is not connected.\"));\n\t\t}\n\t\telse {\n\t\t\tthis.device.doOpenCashDrawer(reason);\n\t\t}\n\t}\n\n\tpublic showDisplayOrder(order: sdk.order.DisplayOrder): void {\n\t\tif (this.device == null || !this.isReady) {\n\t\t\tthis.broadcaster.notifyOnDeviceError(new sdk.remotepay.CloverDeviceErrorEvent(sdk.remotepay.CloverDeviceErrorEvent.CloverDeviceErrorType.COMMUNICATION_ERROR, 0, \"In showDisplayOrder: The Clover device is not connected.\"));\n\t\t}\n\t\telse if (order == null) {\n\t\t\tthis.broadcaster.notifyOnDeviceError(new sdk.remotepay.CloverDeviceErrorEvent(sdk.remotepay.CloverDeviceErrorEvent.CloverDeviceErrorType.VALIDATION_ERROR, 0, \"In showDisplayOrder: Invalid argument.  The order cannot be null.\"));\n\t\t}\n\t\telse {\n\t\t\tthis.device.doOrderUpdate(order, null);\n\t\t}\n\t}\n\n\tpublic removeDisplayOrder(order: sdk.order.DisplayOrder): void {\n\t\tif (this.device == null || !this.isReady) {\n\t\t\tthis.broadcaster.notifyOnDeviceError(new sdk.remotepay.CloverDeviceErrorEvent(sdk.remotepay.CloverDeviceErrorEvent.CloverDeviceErrorType.COMMUNICATION_ERROR, 0, \"In removeDisplayOrder: The Clover device is not connected.\"));\n\t\t}\n\t\telse if (order == null) {\n\t\t\tthis.broadcaster.notifyOnDeviceError(new sdk.remotepay.CloverDeviceErrorEvent(sdk.remotepay.CloverDeviceErrorEvent.CloverDeviceErrorType.VALIDATION_ERROR, 0, \"In removeDisplayOrder: Invalid argument.  The order cannot be null.\"));\n\t\t}\n\t\telse {\n\t\t\tlet dao: sdk.order.operation.OrderDeletedOperation = new sdk.order.operation.OrderDeletedOperation();\n\t\t\tdao.setId(order.getId());\n\t\t\tthis.device.doOrderUpdate(order, dao);\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.broadcaster.clear();\n\t\tif (this.device !== null) {\n\t\t\tthis.device.dispose();\n\t\t}\n\t}\n\n\tpublic invokeInputOption(io: sdk.remotemessage.InputOption): void {\n\t\tif (this.device == null || !this.isReady) {\n\t\t\tthis.broadcaster.notifyOnDeviceError(new sdk.remotepay.CloverDeviceErrorEvent(sdk.remotepay.CloverDeviceErrorEvent.CloverDeviceErrorType.COMMUNICATION_ERROR, 0, \"In invokeInputOption: The Clover device is not connected.\"));\n\t\t}\n\t\telse {\n\t\t\tthis.device.doKeyPress(io.keyPress);\n\t\t}\n\t}\n\n\tpublic resetDevice(): void {\n\t\tif (this.device == null || !this.isReady) {\n\t\t\tthis.broadcaster.notifyOnDeviceError(new sdk.remotepay.CloverDeviceErrorEvent(sdk.remotepay.CloverDeviceErrorEvent.CloverDeviceErrorType.COMMUNICATION_ERROR, 0, \"In resetDevice: The Clover device is not connected.\"));\n\t\t}\n\t\telse {\n\t\t\tthis.device.doResetDevice();\n\t\t}\n\t}\n\n\tprivate getCardEntryMethods(): number {\n\t\treturn this.cardEntryMethods;\n\t}\n}\n\nexport namespace CloverConnector {\n\texport class InnerDeviceObserver implements CloverDeviceObserver {\n\t\t// Create a logger\n\t\tlogger: Logger = Logger.create();\n\n\t\t// Clover connector we are using\n\t\tcloverConnector: CloverConnector;\n\n\t\t// Hold the last Payment Refund Response\n\t\tlastPRR: sdk.remotepay.RefundPaymentResponse;\n\n\t\tconstructor(cc: CloverConnector) {\n\t\t\tthis.cloverConnector = cc;\n\t\t}\n\n\t\tpublic onTxState(txState: sdk.remotemessage.TxState): void {\n\t\t}\n\n\t\tpublic onTxStartResponse(result: sdk.remotemessage.TxStartResponseResult, externalId: string): void {\n\t\t\tif (result == sdk.remotemessage.TxStartResponseResult.SUCCESS) return;\n\n\t\t\tlet duplicate: boolean = (result == sdk.remotemessage.TxStartResponseResult.DUPLICATE);\n\t\t\tlet code: ResultCode = duplicate ? ResultCode.CANCEL : ResultCode.FAIL;\n\t\t\tlet message: string = duplicate ? \"The provided transaction id of \" + externalId + \" has already been processed and cannot be resubmitted.\" : null;\n\t\t\ttry {\n\t\t\t\tif (this.cloverConnector.lastRequest instanceof sdk.remotepay.PreAuthRequest) {\n\t\t\t\t\tlet response: sdk.remotepay.PreAuthResponse = new sdk.remotepay.PreAuthResponse(false, code);\n\t\t\t\t\tresponse.setReason(result.toString());\n\t\t\t\t\tresponse.setMessage(message);\n\t\t\t\t\tthis.cloverConnector.broadcaster.notifyOnPreAuthResponse(response);\n\t\t\t\t}\n\t\t\t\telse if (this.cloverConnector.lastRequest instanceof sdk.remotepay.AuthRequest) {\n\t\t\t\t\tlet response: sdk.remotepay.AuthResponse = new sdk.remotepay.AuthResponse(false, code);\n\t\t\t\t\tresponse.setReason(result.toString());\n\t\t\t\t\tresponse.setMessage(message);\n\t\t\t\t\tthis.cloverConnector.broadcaster.notifyOnAuthResponse(response);\n\t\t\t\t}\n\t\t\t\telse if (this.cloverConnector.lastRequest instanceof sdk.remotepay.SaleRequest) {\n\t\t\t\t\tlet response: sdk.remotepay.SaleResponse = new sdk.remotepay.SaleResponse(false, code);\n\t\t\t\t\tresponse.setReason(result.toString());\n\t\t\t\t\tresponse.setMessage(message);\n\t\t\t\t\tthis.cloverConnector.broadcaster.notifyOnSaleResponse(response);\n\t\t\t\t}\n\t\t\t\telse if (this.cloverConnector.lastRequest instanceof sdk.remotepay.ManualRefundRequest) {\n\t\t\t\t\tlet response: sdk.remotepay.ManualRefundResponse = new sdk.remotepay.ManualRefundResponse(false, code);\n\t\t\t\t\tresponse.setReason(result.toString());\n\t\t\t\t\tresponse.setMessage(message);\n\t\t\t\t\tthis.cloverConnector.broadcaster.notifyOnManualRefundResponse(response);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\tthis.cloverConnector.lastRequest = null;\n\t\t\t}\n\t\t}\n\n\t\tpublic onUiState(uiState: sdk.remotemessage.UiState, uiText: string, uiDirection: sdk.remotemessage.UiState.UiDirection, inputOptions: Array<sdk.remotemessage.InputOption>): void {\n\t\t\tlet deviceEvent: sdk.remotepay.CloverDeviceEvent = new sdk.remotepay.CloverDeviceEvent();\n\t\t\tdeviceEvent.setInputOptions(inputOptions);\n\t\t\tdeviceEvent.setEventState(sdk.remotepay.DeviceEventState[uiState.toString()]);\n\t\t\tdeviceEvent.setMessage(uiText);\n\t\t\tif (uiDirection == sdk.remotemessage.UiState.UiDirection.ENTER) {\n\t\t\t\tthis.cloverConnector.broadcaster.notifyOnDeviceActivityStart(deviceEvent);\n\t\t\t}\n\t\t\telse if (uiDirection == sdk.remotemessage.UiState.UiDirection.EXIT) {\n\t\t\t\tthis.cloverConnector.broadcaster.notifyOnDeviceActivityEnd(deviceEvent);\n\t\t\t\tif (uiState.toString() == sdk.remotepay.DeviceEventState.RECEIPT_OPTIONS.toString()) {\n\t\t\t\t\tthis.cloverConnector.device.doShowWelcomeScreen();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpublic onTipAdded(tip: number): void {\n\t\t\tthis.cloverConnector.broadcaster.notifyOnTipAdded(tip);\n\t\t}\n\n\t\tpublic onAuthTipAdjusted(paymentId: string, tipAmount: number, success: boolean): void;\n\t\tpublic onAuthTipAdjusted(result: ResultCode, reason: string, message: string): void;\n\t\tpublic onAuthTipAdjusted(status: sdk.remotemessage.ResultStatus, reason: string, message: string): void;\n\t\tpublic onAuthTipAdjusted(resultStatusOrPaymentId: any, reasonOrTipAmount: any, messageOrSuccess: any): void {\n\t\t\tif (typeof resultStatusOrPaymentId == 'string') {\n\t\t\t\tif (messageOrSuccess) {\n\t\t\t\t\tthis.onAuthTipAdjustedHandler(resultStatusOrPaymentId, reasonOrTipAmount, messageOrSuccess, ResultCode.SUCCESS, null, null);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.onAuthTipAdjustedHandler(resultStatusOrPaymentId, reasonOrTipAmount, messageOrSuccess, ResultCode.FAIL, 'Failure', 'TipAdjustAuth failed to process for payment ID: ' + resultStatusOrPaymentId);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (resultStatusOrPaymentId instanceof sdk.remotemessage.ResultStatus) {\n\t\t\t\tthis.onAuthTipAdjusted(resultStatusOrPaymentId == sdk.remotemessage.ResultStatus.SUCCESS ? ResultCode.SUCCESS : ResultCode.FAIL, reasonOrTipAmount, messageOrSuccess);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.onAuthTipAdjustedHandler(null, 0, false, resultStatusOrPaymentId, reasonOrTipAmount, messageOrSuccess);\n\t\t\t}\n\t\t}\n\t\tprivate onAuthTipAdjustedHandler(paymentId: string, tipAmount: number, success: boolean, result: ResultCode, reason: string, message: string): void {\n\t\t\tlet taar: sdk.remotepay.TipAdjustAuthResponse = new sdk.remotepay.TipAdjustAuthResponse(success, result);\n\t\t\ttaar.setPaymentId(paymentId);\n\t\t\ttaar.setTipAmount(tipAmount);\n\t\t\ttaar.setSuccess(success);\n\t\t\ttaar.setResult(result);\n\t\t\ttaar.setReason(reason);\n\t\t\ttaar.setMessage(message);\n\t\t\tthis.cloverConnector.broadcaster.notifyOnTipAdjustAuthResponse(taar);\n\t\t}\n\n\t\tpublic onCashbackSelected(cashbackAmount: number): void {\n\t\t\t//TODO: For future use\n\t\t}\n\n\t\tpublic onPartialAuth(partialAmount: number): void {\n\t\t\t//TODO: For future use\n\t\t}\n\n\t\tpublic onFinishOk(payment: sdk.payments.Payment, signature: sdk.base.Signature): void;\n\t\tpublic onFinishOk(credit: sdk.payments.Credit): void;\n\t\tpublic onFinishOk(refund: sdk.payments.Refund): void;\n\t\tpublic onFinishOk(paymentCreditOrRefund: any, signature?: sdk.base.Signature): void {\n\t\t\tif (paymentCreditOrRefund instanceof sdk.payments.Payment && signature) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.cloverConnector.device.doShowThankYouScreen(); //need to do this first, so Listener implementation can replace the screen as desired\n\t\t\t\t\tif (this.cloverConnector.lastRequest instanceof sdk.remotepay.PreAuthRequest) {\n\t\t\t\t\t\tlet response: sdk.remotepay.PreAuthResponse = new sdk.remotepay.PreAuthResponse(true, ResultCode.SUCCESS);\n\t\t\t\t\t\tresponse.setPayment(paymentCreditOrRefund);\n\t\t\t\t\t\tresponse.setSignature(signature);\n\t\t\t\t\t\tthis.cloverConnector.broadcaster.notifyOnPreAuthResponse(response);\n\t\t\t\t\t\tthis.cloverConnector.lastRequest = null;\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.cloverConnector.lastRequest instanceof sdk.remotepay.AuthRequest) {\n\t\t\t\t\t\tlet response: sdk.remotepay.AuthResponse = new sdk.remotepay.AuthResponse(true, ResultCode.SUCCESS);\n\t\t\t\t\t\tresponse.setPayment(paymentCreditOrRefund);\n\t\t\t\t\t\tresponse.setSignature(signature);\n\t\t\t\t\t\tthis.cloverConnector.broadcaster.notifyOnAuthResponse(response);\n\t\t\t\t\t\tthis.cloverConnector.lastRequest = null;\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.cloverConnector.lastRequest instanceof sdk.remotepay.SaleRequest) {\n\t\t\t\t\t\tlet response: sdk.remotepay.SaleResponse = new sdk.remotepay.SaleResponse(true, ResultCode.SUCCESS);\n\t\t\t\t\t\tresponse.setPayment(paymentCreditOrRefund);\n\t\t\t\t\t\tresponse.setSignature(signature);\n\t\t\t\t\t\tthis.cloverConnector.broadcaster.notifyOnSaleResponse(response);\n\t\t\t\t\t\tthis.cloverConnector.lastRequest = null;\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.cloverConnector.lastRequest == null) {\n\t\t\t\t\t\tthis.cloverConnector.device.doShowWelcomeScreen();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.logger.error(\"Failed to pair this response: \" + paymentCreditOrRefund);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfinally {\n\t\t\t\t\t// do nothing for now...\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (paymentCreditOrRefund instanceof sdk.payments.Credit) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.cloverConnector.device.doShowWelcomeScreen();\n\t\t\t\t\tthis.cloverConnector.lastRequest = null;\n\t\t\t\t\tlet response: sdk.remotepay.ManualRefundResponse = new sdk.remotepay.ManualRefundResponse(true, ResultCode.SUCCESS);\n\t\t\t\t\tresponse.setCredit(paymentCreditOrRefund);\n\t\t\t\t\tthis.cloverConnector.broadcaster.notifyOnManualRefundResponse(response);\n\t\t\t\t}\n\t\t\t\tfinally {}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttry {\n\t\t\t\t\tthis.cloverConnector.device.doShowWelcomeScreen();\n\t\t\t\t\tthis.cloverConnector.lastRequest = null;\n\t\t\t\t\tlet lastRefundResponse: sdk.remotepay.RefundPaymentResponse = this.lastPRR;\n\t\t\t\t\tthis.lastPRR = null;\n\n\t\t\t\t\t// Since finishOk is the more appropriate/consistent location in the \"flow\" to\n\t\t\t\t\t// publish the RefundResponse (like SaleResponse, AuthResponse, etc., rather\n\t\t\t\t\t// than after the server call, which calls onPaymetRefund),\n\t\t\t\t\t// we will hold on to the response from\n\t\t\t\t\t// onRefundResponse (Which has more information than just the refund) and publish it here\n\t\t\t\t\tif (lastRefundResponse !== null) {\n\t\t\t\t\t\tif (lastRefundResponse.getRefund().getId() == paymentCreditOrRefund.getId()) {\n\t\t\t\t\t\t\tthis.cloverConnector.broadcaster.notifyOnRefundPaymentResponse(lastRefundResponse);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.logger.error(\"The last PaymentRefundResponse has a different refund than this refund in finishOk\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.logger.error(\"Shouldn't get an onFinishOk with having gotten an onPaymentRefund!\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfinally {}\n\t\t\t}\n\t\t}\n\n\t\tpublic onFinishCancel(): void;\n\t\tpublic onFinishCancel(result: ResultCode, reason: string, message: string): void;\n\t\tpublic onFinishCancel(result?: ResultCode, reason?: string, message?: string): void {\n\t\t\tif (!result) {\n\t\t\t\tthis.onFinishCancel(ResultCode.CANCEL, null, null);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tthis.cloverConnector.device.doShowWelcomeScreen();\n\t\t\t\tlet lastReq: any = this.cloverConnector.lastRequest;\n\t\t\t\tthis.cloverConnector.lastRequest = null;\n\t\t\t\tif (lastReq instanceof sdk.remotepay.PreAuthRequest) {\n\t\t\t\t\tlet preAuthResponse: sdk.remotepay.PreAuthResponse = new sdk.remotepay.PreAuthResponse(false, result);\n\t\t\t\t\tpreAuthResponse.setReason(reason !== null ? reason : \"Request Canceled\");\n\t\t\t\t\tpreAuthResponse.setMessage(message !== null ? message : \"The PreAuth Request was canceled.\");\n\t\t\t\t\tpreAuthResponse.setPayment(null);\n\t\t\t\t\tthis.cloverConnector.broadcaster.notifyOnPreAuthResponse(preAuthResponse);\n\t\t\t\t}\n\t\t\t\telse if (lastReq instanceof sdk.remotepay.SaleRequest) {\n\t\t\t\t\tlet saleResponse: sdk.remotepay.SaleResponse = new sdk.remotepay.SaleResponse(false, result);\n\t\t\t\t\tsaleResponse.setReason(reason !== null ? reason : \"Request Canceled\");\n\t\t\t\t\tsaleResponse.setMessage(message !== null ? message : \"The Sale Request was canceled.\");\n\t\t\t\t\tsaleResponse.setPayment(null);\n\t\t\t\t\tthis.cloverConnector.broadcaster.notifyOnSaleResponse(saleResponse);\n\t\t\t\t}\n\t\t\t\telse if (lastReq instanceof sdk.remotepay.AuthRequest) {\n\t\t\t\t\tlet authResponse: sdk.remotepay.AuthResponse = new sdk.remotepay.AuthResponse(false, result);\n\t\t\t\t\tauthResponse.setReason(reason !== null ? reason : \"Request Canceled\");\n\t\t\t\t\tauthResponse.setMessage(message !== null ? message : \"The Auth Request was canceled.\");\n\t\t\t\t\tauthResponse.setPayment(null);\n\t\t\t\t\tthis.cloverConnector.broadcaster.notifyOnAuthResponse(authResponse);\n\t\t\t\t}\n\t\t\t\telse if (lastReq instanceof sdk.remotepay.ManualRefundRequest) {\n\t\t\t\t\tlet refundResponse: sdk.remotepay.ManualRefundResponse = new sdk.remotepay.ManualRefundResponse(false, result);\n\t\t\t\t\trefundResponse.setReason(reason !== null ? reason : \"Request Canceled\");\n\t\t\t\t\trefundResponse.setMessage(message !== null ? message : \"The Manual Refund Request was canceled.\");\n\t\t\t\t\trefundResponse.setCredit(null);\n\t\t\t\t\tthis.cloverConnector.broadcaster.notifyOnManualRefundResponse(refundResponse);\n\t\t\t\t}\n\t\t\t\telse if (this.lastPRR instanceof sdk.remotepay.RefundPaymentResponse) {\n\t\t\t\t\tthis.cloverConnector.broadcaster.notifyOnRefundPaymentResponse(this.lastPRR);\n\t\t\t\t\tthis.lastPRR = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\t// do nothing\n\t\t\t}\n\t\t}\n\n\t\tpublic onVerifySignature(payment: sdk.remotepay.Payment, signature: sdk.base.Signature): void {\n\t\t\tlet request: InnerDeviceObserver.SVR = new InnerDeviceObserver.SVR(this.cloverConnector.device);\n\t\t\trequest.setSignature(signature);\n\t\t\trequest.setPayment(payment);\n\t\t\tthis.cloverConnector.broadcaster.notifyOnVerifySignatureRequest(request);\n\t\t}\n\n\t\tpublic onConfirmPayment(payment: sdk.payments.Payment, challenges: sdk.base.Challenge[]): void {\n\t\t\tlet cpr: sdk.remotepay.ConfirmPaymentRequest = new sdk.remotepay.ConfirmPaymentRequest();\n\t\t\tcpr.setPayment(payment);\n\t\t\tcpr.setChallenges(challenges);\n\t\t\tthis.cloverConnector.broadcaster.notifyOnConfirmPaymentRequest(cpr);\n\t\t}\n\n\t\tpublic onPaymentVoided(payment: sdk.remotepay.Payment, voidReason: sdk.order.VoidReason): void;\n\t\tpublic onPaymentVoided(result: ResultCode, reason: string, message: string): void;\n\t\tpublic onPaymentVoided(status: sdk.remotemessage.ResultStatus, reason: string, message: string): void;\n\t\tpublic onPaymentVoided(resultStatusOrPayment: any, reasonOrVoidReason: any, message?: string): void {\n\t\t\tif (resultStatusOrPayment instanceof sdk.remotepay.Payment) {\n\t\t\t\tthis.onPaymentVoidedHandler(resultStatusOrPayment, reasonOrVoidReason, ResultCode.SUCCESS, reasonOrVoidReason.toString(), null);\n\t\t\t}\n\t\t\telse if (resultStatusOrPayment instanceof sdk.remotemessage.ResultStatus) {\n\t\t\t\tthis.onPaymentVoided(status == sdk.remotemessage.ResultStatus.SUCCESS ? ResultCode.SUCCESS : ResultCode.FAIL, reasonOrVoidReason, message);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.onPaymentVoidedHandler(null, reasonOrVoidReason.FAILED, resultStatusOrPayment, reasonOrVoidReason !== null ? reasonOrVoidReason : resultStatusOrPayment.toString(), message !== null ? message : \"No extended information provided.\");\n\t\t\t}\n\t\t}\n\t\tprivate onPaymentVoidedHandler(payment: sdk.payments.Payment, voidReason: sdk.order.VoidReason, result: ResultCode, reason: string, message: string): void {\n\t\t\tlet success: boolean = (result == ResultCode.SUCCESS);\n\t\t\tlet response: sdk.remotepay.VoidPaymentResponse = new sdk.remotepay.VoidPaymentResponse(success, result);\n\t\t\tresponse.setPaymentId(payment !== null ? payment.getId() : null);\n\t\t\tresponse.setReason(reason);\n\t\t\tresponse.setMessage(message);\n\t\t\tthis.cloverConnector.broadcaster.notifyOnVoidPaymentResponse(response);\n\t\t}\n\n\t\tpublic onKeyPressed(keyPress: sdk.remotemessage.KeyPress): void {\n\t\t\t//TODO: For future use\n\t\t}\n\n\t\tpublic onPaymentRefundResponse(orderId: string, paymentId: string, refund: sdk.payments.Refund, code: sdk.remotemessage.TxState): void {\n\t\t\t// hold the response for finishOk for the refund. See comments in onFinishOk(Refund)\n\t\t\tlet success: boolean = (code == sdk.remotemessage.TxState.SUCCESS);\n\t\t\tlet prr: sdk.remotepay.RefundPaymentResponse = new sdk.remotepay.RefundPaymentResponse(success, success ? ResultCode.SUCCESS : ResultCode.FAIL);\n\t\t\tprr.setOrderId(orderId);\n\t\t\tprr.setPaymentId(paymentId);\n\t\t\tprr.setRefund(refund);\n\t\t\tthis.lastPRR = prr; // set this so we have the appropriate information for when onFinish(Refund) is called\n\t\t}\n\n\t\tpublic onVaultCardResponse(vaultedCard: sdk.payments.VaultedCard, code: string, reason: string): void;\n\t    public onVaultCardResponse(success: boolean, code: ResultCode, reason: string, message: string, vaultedCard: sdk.payments.VaultedCard): void;\n\t\tpublic onVaultCardResponse(vaultedCardOrSuccess: any, code: any, reason: string, message?: string, vaultedCard?: sdk.payments.VaultedCard): void {\n\t\t\tif (vaultedCardOrSuccess instanceof sdk.payments.VaultedCard) {\n\t\t\t\tlet success: boolean = (code == ResultCode.SUCCESS);\n\t\t\t\tthis.onVaultCardResponse(success, success ? ResultCode.SUCCESS : ResultCode.FAIL, null, null, vaultedCard);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.cloverConnector.device.doShowWelcomeScreen();\n\t\t\t\tlet vcr: sdk.remotepay.VaultCardResponse = new sdk.remotepay.VaultCardResponse(vaultedCardOrSuccess, code, vaultedCard !== null ? vaultedCard : null);\n\t\t\t\tvcr.setReason(reason);\n\t\t\t\tvcr.setMessage(message);\n\t\t\t\tthis.cloverConnector.broadcaster.notifyOnVaultCardRespose(vcr);\n\t\t\t}\n\t\t}\n\n\t\tpublic onCapturePreAuth(status: sdk.remotemessage.ResultStatus, reason: string, paymentId: string, amount: number, tipAmount: number): void;\n\t\tpublic onCapturePreAuth(code: ResultCode, reason: string, paymentId: string, amount: number, tipAmount: number): void;\n\t\tpublic onCapturePreAuth(statusOrCode: any, reason: string, paymentId: string, amount: number, tipAmount: number): void {\n\t\t\tif (statusOrCode instanceof sdk.remotemessage.ResultStatus) {\n\t\t\t\tlet success: boolean = (sdk.remotemessage.ResultStatus.SUCCESS == statusOrCode);\n\t\t\t\tlet response: sdk.remotepay.CapturePreAuthResponse = new sdk.remotepay.CapturePreAuthResponse(success, success ? ResultCode.SUCCESS : ResultCode.FAIL);\n\t\t\t\tresponse.setReason(reason);\n\t\t\t\tresponse.setPaymentID(paymentId);\n\t\t\t\tresponse.setAmount(amount);\n\t\t\t\tresponse.setTipAmount(tipAmount);\n\t\t\t\tthis.cloverConnector.broadcaster.notifyOnCapturePreAuth(response);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet success: boolean = (ResultCode.SUCCESS == statusOrCode);\n\t\t\t\tlet response: sdk.remotepay.CapturePreAuthResponse = new sdk.remotepay.CapturePreAuthResponse(success, statusOrCode);\n\t\t\t\tresponse.setReason(reason);\n\t\t\t\tresponse.setPaymentID(paymentId);\n\t\t\t\tif (amount !== null) {\n\t\t\t\t\tresponse.setAmount(amount);\n\t\t\t\t}\n\t\t\t\tif (tipAmount !== null) {\n\t\t\t\t\tresponse.setTipAmount(tipAmount);\n\t\t\t\t}\n\t\t\t\tthis.cloverConnector.broadcaster.notifyOnCapturePreAuth(response);\n\t\t\t}\n\t\t}\n\n\t\tpublic onCloseoutResponse(status: sdk.remotemessage.ResultStatus, reason: string, batch: sdk.payments.Batch): void;\n\t\tpublic onCloseoutResponse(result: ResultCode, reason: string, message: string): void;\n\t\tpublic onCloseoutResponse(statusOrResult: any, reason: string, batchOrMessage: any): void {\n\t\t\tif (statusOrResult instanceof sdk.remotemessage.ResultStatus) {\n\t\t\t\tthis.onCloseoutResponseHandler(batchOrMessage, statusOrResult == sdk.remotemessage.ResultStatus.SUCCESS ? ResultCode.SUCCESS : ResultCode.FAIL, reason, null);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.onCloseoutResponseHandler(null, statusOrResult, reason, batchOrMessage);\n\t\t\t}\n\t\t}\n\t\tprivate onCloseoutResponseHandler(batch: sdk.payments.Batch, result: ResultCode, reason: string, message: string): void {\n\t\t\tlet success: boolean = (result == ResultCode.SUCCESS);\n\t\t\tlet cr: sdk.remotepay.CloseoutResponse = new sdk.remotepay.CloseoutResponse(success, result);\n\t\t\tcr.setBatch(batch);\n\t\t\tcr.setReason(reason);\n\t\t\tcr.setMessage(message);\n\t\t\tthis.cloverConnector.broadcaster.notifyCloseout(cr);\n\t\t}\n\n\t\tpublic onDeviceDisconnected(): void {\n\t\t\tthis.logger.debug('Disconnected');\n\t\t\tthis.cloverConnector.isReady = false;\n\t\t\tthis.cloverConnector.broadcaster.notifyOnDisconnect();\n\t\t}\n\n\t\tpublic onDeviceConnected(): void {\n\t\t\tthis.logger.debug('Connected');\n\t\t\tthis.cloverConnector.isReady = false;\n\t\t\tthis.cloverConnector.broadcaster.notifyOnConnect();\n\t\t}\n\n\t\tpublic onDeviceReady(device: CloverDevice, drm: sdk.remotemessage.DiscoveryResponseMessage): void {\n\t\t\tthis.logger.debug('Ready');\n\t\t\tthis.cloverConnector.isReady = drm.ready;\n\n\t\t\tlet merchantInfo: sdk.remotepay.MerchantInfo = new sdk.remotepay.MerchantInfo(drm);\n\t\t\tthis.cloverConnector.merchantInfo = merchantInfo;\n\t\t\tthis.cloverConnector.device.setSupportsAcks(merchantInfo.deviceInfo.supportsAcks);\n\n\t\t\tif (drm.ready) {\n\t\t\t\tthis.cloverConnector.device.doShowWelcomeScreen();\n\t\t\t\tthis.cloverConnector.broadcaster.notifyOnReady(merchantInfo);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.cloverConnector.broadcaster.notifyOnConnect();\n\t\t\t}\n\t\t}\n\n\t\tpublic onDeviceError(errorEvent: sdk.remotepay.CloverDeviceErrorEvent): void {\n\t\t\tthis.cloverConnector.broadcaster.notifyOnDeviceError(errorEvent);\n\t\t}\n\n\t\t// TODO: The Print Message objects are missing from the api\n\t\tpublic onPrintRefundPayment(payment: sdk.remotepay.Payment, order: sdk.order.Order, refund: sdk.payments.Refund): void {\n\t\t\t// this.cloverConnector.broadcaster.notifyOnPrintRefundPaymentReceipt(new PrintRefundPaymentReceiptMessage(payment, order, refund));\n\t\t}\n\t\tpublic onPrintMerchantReceipt(payment: sdk.remotepay.Payment): void {\n\t\t\t// this.cloverConnector.broadcaster.notifyOnPrintPaymentMerchantCopyReceipt(new PrintPaymentMerchantCopyReceiptMessage(payment));\n\t\t}\n\t\tpublic onPrintPaymentDecline(payment: sdk.remotepay.Payment, reason: string): void {\n\t\t\t// this.cloverConnector.broadcaster.notifyOnPrintPaymentDeclineReceipt(new PrintPaymentDeclineReceiptMessage(payment, reason));\n\t\t}\n\t\tpublic onPrintPayment(payment: sdk.remotepay.Payment, order: sdk.order.Order): void {\n\t\t\t// this.cloverConnector.broadcaster.notifyOnPrintPaymentReceipt(new PrintPaymentReceiptMessage(payment, order));\n\t\t}\n\t\tpublic onPrintCredit(credit: sdk.remotepay.Credit): void {\n\t\t\t// this.cloverConnector.broadcaster.notifyOnPrintCreditReceipt(new PrintManualRefundReceiptMessage(credit));\n\t\t}\n\t\tpublic onPrintCreditDecline(credit: sdk.remotepay.Credit, reason: string): void {\n\t\t\t// this.cloverConnector.broadcaster.notifyOnPrintCreditDeclineReceipt(new PrintManualRefundDeclineReceiptMessage(credit, reason));\n\t\t}\n\n\t\tpublic onMessageAck(messageId: string): void {\n\t\t\t// TODO: for future use\n\t\t}\n\n\t\tpublic onPendingPaymentsResponse(success: boolean, pendingPayments: Array<sdk.base.PendingPaymentEntry>): void;\n\t\tpublic onPendingPaymentsResponse(result: ResultCode, reason: string, message: string): void;\n\t\tpublic onPendingPaymentsResponse(status: sdk.remotemessage.ResultStatus, reason: string, message: string): void;\n\t\tpublic onPendingPaymentsResponse(resultStatusOrSuccess: any, pendingPaymentsOrReason: any, message?: string): void {\n\t\t\tif (typeof resultStatusOrSuccess == 'boolean') {\n\t\t\t\tthis.onPendingPaymentsResponseHandler(resultStatusOrSuccess, pendingPaymentsOrReason, ResultCode.SUCCESS, null, null);\n\t\t\t}\n\t\t\telse if (resultStatusOrSuccess instanceof sdk.remotemessage.ResultStatus) {\n\t\t\t\tthis.onPendingPaymentsResponse(resultStatusOrSuccess == sdk.remotemessage.ResultStatus.SUCCESS ? ResultCode.SUCCESS : ResultCode.FAIL, pendingPaymentsOrReason, message);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.cloverConnector.device.doShowWelcomeScreen();\n\t\t\t\tthis.onPendingPaymentsResponseHandler(false, null, resultStatusOrSuccess, pendingPaymentsOrReason, message);\n\t\t\t}\n\t\t}\n\t\tprivate onPendingPaymentsResponseHandler(success: boolean, pendingPayments: Array<sdk.base.PendingPaymentEntry>, result: ResultCode, reason: string, message: string): void {\n\t\t\tlet rppr: sdk.remotepay.RetrievePendingPaymentsResponse = new sdk.remotepay.RetrievePendingPaymentsResponse(result, message, pendingPayments);\n\t\t\trppr.setSuccess(success);\n\t\t\trppr.setReason(reason);\n\t\t\tthis.cloverConnector.broadcaster.notifyOnRetrievePendingPaymentResponse(rppr);\n\t\t}\n\n\t\tpublic onReadCardResponse(status: sdk.remotemessage.ResultStatus, reason: string, cardData: sdk.base.CardData): void {\n\t\t\tlet success: boolean = (status == sdk.remotemessage.ResultStatus.SUCCESS);\n\t\t\tif (success) {\n\t\t\t\tlet rcdr: sdk.remotepay.ReadCardDataResponse = new sdk.remotepay.ReadCardDataResponse(success, success ? ResultCode.SUCCESS : ResultCode.FAIL);\n\t\t\t\trcdr.setCardData(cardData);\n\t\t\t\tthis.cloverConnector.device.doShowWelcomeScreen();\n\t\t\t\tthis.cloverConnector.broadcaster.notifyOnReadCardDataResponse(rcdr);\n\t\t\t}\n\t\t\telse if (status == sdk.remotemessage.ResultStatus.CANCEL) {\n\t\t\t\tthis.onReadCardDataResponse(ResultCode.CANCEL, reason, '');\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.onReadCardDataResponse(ResultCode.FAIL, reason, '');\n\t\t\t}\n\t\t}\n\t\tpublic onReadCardDataResponse(result: ResultCode, reason: string, message: string): void {\n\t\t\tlet success: boolean = (result == ResultCode.SUCCESS);\n\t\t\tthis.cloverConnector.device.doShowWelcomeScreen();\n\t\t\tlet rcdr: sdk.remotepay.ReadCardDataResponse = new sdk.remotepay.ReadCardDataResponse(success, result);\n\t\t\trcdr.setReason(reason);\n\t\t\trcdr.setMessage(message);\n\t\t\tthis.cloverConnector.broadcaster.notifyOnReadCardDataResponse(rcdr);\n\t\t}\n\t}\n\n\texport namespace InnerDeviceObserver {\n\t\texport class SVR extends sdk.remotepay.VerifySignatureRequest {\n\t\t\tcloverDevice: CloverDevice;\n\n\t\t\tconstructor(device: CloverDevice) {\n\t\t\t\tsuper();\n\t\t\t\tthis.cloverDevice = device;\n\t\t\t}\n\n\t\t\tpublic accept(): void {\n\t\t\t\tthis.cloverDevice.doSignatureVerified(super.getPayment(), true);\n\t\t\t}\n\n\t\t\tpublic reject(): void {\n\t\t\t\tthis.cloverDevice.doSignatureVerified(super.getPayment(), false);\n\t\t\t}\n\n\t\t\tpublic setSignature(signature: sdk.base.Signature): void {\n\t\t\t\tsuper.setSignature(signature);\n\t\t\t}\n\n\t\t\tpublic setPayment(payment: sdk.payments.Payment): void {\n\t\t\t\tsuper.setPayment(payment);\n\t\t\t}\n\t\t}\n\t}\n}\n"]}