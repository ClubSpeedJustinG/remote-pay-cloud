{"version":3,"sources":["com/clover/remote/client/DefaultCloverConnectorListener.ts"],"names":[],"mappings":";;AAEA;IAKC,wCAAY,eAA+C;QAFnD,UAAK,GAAY,KAAK,CAAC;QAG9B,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;IACxC,CAAC;IAEM,gDAAO,GAAd;QACC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;IACnB,CAAC;IAEM,6DAAoB,GAA3B;QACC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACpB,CAAC;IAEM,0DAAiB,GAAxB;QACC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACpB,CAAC;IAEM,sDAAa,GAApB,UAAqB,YAAwC;QAC5D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IAClC,CAAC;IAEM,8DAAqB,GAA5B,UAA6B,WAA4C;IAEzE,CAAC;IAEM,4DAAmB,GAA1B,UAA2B,WAA4C;IAEvE,CAAC;IAEM,sDAAa,GAApB,UAAqB,gBAAsD;IAE3E,CAAC;IAEM,uDAAc,GAArB,UAAsB,QAAoC;IAE1D,CAAC;IAEM,gEAAuB,GAA9B,UAA+B,QAA6C;IAE5E,CAAC;IAEM,iEAAwB,GAA/B,UAAgC,QAA8C;IAE9E,CAAC;IAEM,iEAAwB,GAA/B,UAAgC,OAA6C;QAC5E,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,KAAK,IAAI,CAAC,CAAC,CAAC;YACnC,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QAC/C,CAAC;IACF,CAAC;IAIM,2DAAkB,GAAzB,UAA0B,QAAwC;IAElE,CAAC;IAEM,uDAAc,GAArB,UAAsB,QAAoC;IAE1D,CAAC;IAEM,0DAAiB,GAAxB,UAAyB,QAAuC;IAEhE,CAAC;IAEM,+DAAsB,GAA7B,UAA8B,QAA4C;IAE1E,CAAC;IAEM,gEAAuB,GAA9B,UAA+B,QAA6C;IAE5E,CAAC;IAEM,mDAAU,GAAjB,UAAkB,OAA0C;IAE5D,CAAC;IAEM,8DAAqB,GAA5B,UAA6B,QAA2C;IAExE,CAAC;IAEM,4DAAmB,GAA1B,UAA2B,QAAyC;IAEpE,CAAC;IAED,2DAA2D;IAC3D;;;;;;;;;;;;;;;;;;;;;;;;MAwBE;IAEK,0EAAiC,GAAxC,UAAyC,8BAA6E;IAEtH,CAAC;IAEM,+DAAsB,GAA7B,UAA8B,QAA4C;IAE1E,CAAC;IACF,qCAAC;AAAD,CA5HA,AA4HC,IAAA;AA5HqB,wEAA8B","file":"../../../../../com/clover/remote/client/DefaultCloverConnectorListener.js","sourcesContent":["import sdk = require('remote-pay-cloud-api');\n\nexport abstract class DefaultCloverConnectorListener implements sdk.remotepay.ICloverConnectorListener {\n\tprotected cloverConnector: sdk.remotepay.ICloverConnector;\n\tprotected merchantInfo: sdk.remotepay.MerchantInfo;\n\tprivate ready: boolean = false;\n\n\tconstructor(cloverConnector: sdk.remotepay.ICloverConnector) {\n\t\tthis.cloverConnector = cloverConnector;\n\t}\n\n\tpublic isReady(): boolean {\n\t\treturn this.ready;\n\t}\n\n\tpublic onDeviceDisconnected(): void {\n\t\tthis.ready = false;\n\t}\n\n\tpublic onDeviceConnected(): void {\n\t\tthis.ready = false;\n\t}\n\n\tpublic onDeviceReady(merchantInfo: sdk.remotepay.MerchantInfo): void {\n\t\tthis.ready = true;\n\t\tthis.merchantInfo = merchantInfo;\n\t}\n\n\tpublic onDeviceActivityStart(deviceEvent: sdk.remotepay.CloverDeviceEvent): void {\n\n\t}\n\n\tpublic onDeviceActivityEnd(deviceEvent: sdk.remotepay.CloverDeviceEvent): void {\n\n\t}\n\n\tpublic onDeviceError(deviceErrorEvent: sdk.remotepay.CloverDeviceErrorEvent): void {\n\n\t}\n\n\tpublic onAuthResponse(response: sdk.remotepay.AuthResponse): void {\n\n\t}\n\n\tpublic onTipAdjustAuthResponse(response: sdk.remotepay.TipAdjustAuthResponse): void {\n\n\t}\n\n\tpublic onCapturePreAuthResponse(response: sdk.remotepay.CapturePreAuthResponse): void {\n\n\t}\n\n\tpublic onVerifySignatureRequest(request: sdk.remotepay.VerifySignatureRequest): void {\n\t\tif (this.cloverConnector !== null) {\n\t\t\tthis.cloverConnector.acceptSignature(request);\n\t\t}\n\t}\n\n\tpublic abstract onConfirmPaymentRequest(request: sdk.remotepay.ConfirmPaymentRequest): void;\n\n\tpublic onCloseoutResponse(response: sdk.remotepay.CloseoutResponse): void {\n\n\t}\n\n\tpublic onSaleResponse(response: sdk.remotepay.SaleResponse): void {\n\n\t}\n\n\tpublic onPreAuthResponse(response: sdk.remotepay.PreAuthResponse): void {\n\n\t}\n\n\tpublic onManualRefundResponse(response: sdk.remotepay.ManualRefundResponse): void {\n\n\t}\n\n\tpublic onRefundPaymentResponse(response: sdk.remotepay.RefundPaymentResponse): void {\n\n\t}\n\n\tpublic onTipAdded(message: sdk.remotemessage.TipAddedMessage): void {\n\n\t}\n\n\tpublic onVoidPaymentResponse(response: sdk.remotepay.VoidPaymentResponse): void {\n\n\t}\n\n\tpublic onVaultCardResponse(response: sdk.remotepay.VaultCardResponse): void {\n\n\t}\n\n\t// TODO: These print messages need to be created in the api\n\t/*\n\tpublic onPrintManualRefundReceipt(pcm: PrintManualRefundReceiptMessage): void {\n\n\t}\n\n\tpublic onPrintManualRefundDeclineReceipt(pcdrm: PrintManualRefundDeclineReceiptMessage): void {\n\n\t}\n\n\tpublic onPrintPaymentReceipt(pprm: PrintPaymentReceiptMessage): void {\n\n\t}\n\n\tpublic onPrintPaymentDeclineReceipt(ppdrm: PrintPaymentDeclineReceiptMessage): void {\n\n\t}\n\n\tpublic onPrintPaymentMerchantCopyReceipt(ppmcrm: PrintPaymentMerchantCopyReceiptMessage): void {\n\n\t}\n\n\tpublic onPrintRefundPaymentReceipt(pprrm: PrintRefundPaymentReceiptMessage): void {\n\n\t}\n\t*/\n\n\tpublic onRetrievePendingPaymentsResponse(retrievePendingPaymentResponse: sdk.remotepay.RetrievePendingPaymentsResponse): void {\n\n\t}\n\n\tpublic onReadCardDataResponse(response: sdk.remotepay.ReadCardDataResponse): void {\n\n\t}\n}\n"]}