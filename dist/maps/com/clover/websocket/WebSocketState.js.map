{"version":3,"sources":["com/clover/websocket/WebSocketState.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;;;AAGH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA0DG;AACH,IAAY,cAoCX;AApCD,WAAY,cAAc;IAEtB;;;;OAIG;IACH,WAAW;IAGX;;;OAGG;IACH,+DAAU,CAAA;IAGV;;;;OAIG;IACH,mDAAI,CAAA;IAGJ;;;OAGG;IACH,yDAAO,CAAA;IAGP;;OAEG;IACH,uDAAM,CAAA;AACV,CAAC,EApCW,cAAc,GAAd,sBAAc,KAAd,sBAAc,QAoCzB","file":"../../../../com/clover/websocket/WebSocketState.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Neo Visionaries Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * WebSocket state.\n *\n * <p>\n * The initial state of a {@link WebSocket} instance is\n * <b><code>CREATED</code></b>. {@code WebSocket.}{@link\n    * WebSocket#connect() connect()} method is allowed to be called\n * only when the state is {@code CREATED}. If the method is called\n * when the state is not {@code CREATED}, a {@link WebSocketException}\n * is thrown (its error code is {@link WebSocketError#NOT_IN_CREATED_STATE\n * NOT_IN_CREATED_STATE}).\n * </p>\n *\n * <p>\n * At the beginning of the implementation of {@code connect()} method,\n * the state is changed to <b><code>CONNECTING</code></b>, and then\n * {@link WebSocketListener#onStateChanged(WebSocket, WebSocketState)\n * onStateChanged()} method of each registered listener ({@link\n    * WebSocketListener}) is called.\n * </p>\n *\n * <p>\n * After the state is changed to {@code CONNECTING}, a WebSocket\n * <a href=\"https://tools.ietf.org/html/rfc6455#section-4\">opening\n * handshake</a> is performed. If an error occurred during the\n * handshake, the state is changed to {@code CLOSED} ({@code\n * onStateChanged()} method of listeners is called) and a {@code\n * WebSocketException} is thrown. There are various reasons for\n * handshake failure. If you want to know the reason, get the error\n * code ({@link WebSocketError}) by calling {@link\n    * WebSocketException#getError() getError()} method of the exception.\n * </p>\n *\n * <p>\n * After the opening handshake succeeded, the state is changed to\n * <b><code>OPEN</code></b>. Listeners' {@code onStateChanged()} method\n * and {@link WebSocketListener#onConnected(WebSocket, java.util.Map)\n * onConnected()} method are called in this order. Note that {@code\n * onConnected()} method is called by another thread.\n * </p>\n *\n * <p>\n * Upon either sending or receiving a <a href=\n * \"https://tools.ietf.org/html/rfc6455#section-5.5.1\">close frame</a>,\n * a <a href=\"https://tools.ietf.org/html/rfc6455#section-7\">closing\n * handshake</a> is started. The state is changed to\n * <b><code>CLOSING</code></b> and {@code onStateChanged()} method of\n * listeners is called.\n * </p>\n *\n * <p>\n * After the client and the server have exchanged close frames, the\n * state is changed to <b><code>CLOSED</code></b>. Listeners'\n * {@code onStateChanged()} method and {@link\n    * WebSocketListener#onDisconnected(WebSocket, WebSocketFrame,\n * WebSocketFrame, boolean) onDisconnected()} method is called in\n * this order.\n * </p>\n */\nexport enum WebSocketState\n{\n    /**\n     * This value does not exist in the web\n     *\n     * The initial state of a {@link WebSocket} instance.\n     */\n    // CREATED,\n\n\n    /**\n     * An <a href=\"https://tools.ietf.org/html/rfc6455#section-4\">opening\n     * handshake</a> is being performed.\n     */\n    CONNECTING,\n\n\n    /**\n     * The WebSocket connection is established (= the <a href=\n     * \"https://tools.ietf.org/html/rfc6455#section-4\">opening handshake</a>\n     * has succeeded) and usable.\n     */\n    OPEN,\n\n\n    /**\n     * A <a href=\"https://tools.ietf.org/html/rfc6455#section-7\">closing\n     * handshake</a> is being performed.\n     */\n    CLOSING,\n\n\n    /**\n     * The WebSocket connection is closed.\n     */\n    CLOSED\n}\n"]}